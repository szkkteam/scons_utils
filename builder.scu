import SCons
import os
import sys
from logger import _logger

print("Build started ...")

#
# Logging
#


# Create option to specify the project root path.
AddOption('--project_path',
          dest='project_path',
          type='string',
          #nargs=1,
          action='store',
          metavar='DIR',
          help='installation prefix')

project_path = GetOption ('project_path')
# If the given project root path is not exists return with error
if not os.path.isdir(project_path):
	_logger.error("Project path: \'%s\'' is not exists." % project_path)
	sys.exit(90)

env = Environment() # Initialize the environment

# Workaround to don't let scons randomly create this dblite file.
env.SConsignFile(os.path.join(env.Dir('#').abspath, project_path, '.sconsign.dblite'))

# Prepare shared targets dictionary
env['targets'] = dict()
# Allow modules to use `env.get_targets('libname1', 'libname2', ...)` as
#  a shortcut for adding targets from other modules to sources lists.
env.get_targets = lambda *args, **kwargs: get_targets(env, *args, **kwargs)

# Go over modules to build, and include their SConscript files
for module in modules():
    # Verify the SConscript file exists
    sconscript_path = os.path.join(module, 'SConscript')
    assert os.path.isfile(sconscript_path)
    print 'scons: |- Reading module', module, '...'
    # Execute the SConscript file, with variant_dir set to the
    #  module dir under the project build dir.
    targets = env.SConscript(sconscript_path,
                             variant_dir=os.path.join(build_dir, module),
                             exports={'env': env})
    # Add the targets built by this module to the shared cross-module targets
    #  dictionary, to allow the next modules to refer to these targets easily.
    for target_name in targets:
        # Target key built from module name and target name
        # It is expected to be unique
        target_key = '%s::%s' % (module, target_name)
        assert target_key not in env['targets']
env['targets'][target_key] = targets[target_name]



#target = env.SConscript(project_path + '/SconScript.sci', exports = ['env'], must_exist=1)

#print (env.Dump())
#env.Program(target = project_path + '/main', source = [project_path + "/main.c"])